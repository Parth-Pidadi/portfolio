import AnimatedText from "@/Components/AnimatedText";
import { GithubIcon } from "@/Components/Icons";
import Layout from "@/Components/Layout";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import React from "react";
import ytimg from "../../public/images/projects/YT-analytics.png";
import uberimg from "../../public/images/projects/Uber-analytics.png";
import Transitions from "@/Components/Transitions";
import Portfolioimg from "../../public/images/projects/Portfolio.png";
import anprimg from "../../public/images/projects/ANPR.jpeg";
import bscimg from "../../public/images/projects/Black Scholes Calculator.jpeg";
import olympicsimg from "../../public/images/projects/olympics.jpeg";

const FeatureProject = ({ type, title, summary, img, github, link }) => {
  return (
    <article className="dark:bg-dark dark:border-light w-full flex relative items-center justify-between rounded-3xl border border-solid border-dark bg-light shadow-2xl p-12 rounded-br-2xl lg:flex-col lg:p-8 xs:rounded-2xl xs:rounded-br-3xl xs:p-4">
      <div className="absolute top-0 -right-3 -z-10 w-[101%] h-[103%] rounded-[2.5rem] bg-dark rounded-br-3xl dark:bg-primary xs:-right-3 sm:h-[102%] xs:w-[100%] xs:rounded-[1.5rem]" />

      <Link
        href={link}
        target="_blank"
        className=" w-1/2 cursor-pointer overflow-hidden rounded-lg lg:w-full"
      >
        <Image
          src={img}
          alt={title}
          className="w-full h-auto"
          priority
          sizes="(max-width: 768px) 100vw,
              (max-width: 1200px) 50vw,
              33vw"
        />
      </Link>

      <div className="w-1/2 flex flex-col items-start justify-between pl-6 lg:w-full lg:pl-0 lg:pt-6 ">
        <span className="text-primary dark:text-primaryDark font-medium text-xl xs:text-base">
          {type}
        </span>
        <Link
          href={link}
          target="_blank"
          className="hover:underline underline-offset-2 dark:hover:un"
        >
          <h2 className="my-2 w-full text-left text-4xl font-bold dark:text-light sm:text-sm">
            {title}
          </h2>
        </Link>
        <p className="my-2 font-medium text-dark dark:text-light">{summary}</p>
        <div className="mt-2 flex items-center">
          <Link href={github} target="_blank" className="w-10">
            {" "}
            <GithubIcon />
          </Link>
          <Link
            href={link}
            target="_blank"
            className="ml-4 rounded-lg bg-dark dark:bg-light dark:text-dark text-light p-2 px-6 text-lg font-semibold sm:px-4 sm:text-base "
          >
            {" "}
            Visit Project
          </Link>
        </div>
      </div>
    </article>
  );
};

const Project = ({  title, summary, img, github, link }) => {
  return (
    <>
      <article className=" dark:bg-dark dark:border-light w-full flex relative shadow-2xl items-center flex-col justify-center rounded-2xl border border-solid border-dark bg-light p-6 xs:p-4">
        <div className="absolute top-0 -right-3 -z-10 w-[102%] h-[103%] rounded-[2rem] bg-dark dark:bg-primaryDark md:-right-2 md:w-[101%] sm:h-[102%] xs:rounded-[1.5rem]" />

        <Link
          href={link}
          target="_blank"
          className=" w-full cursor-pointer overflow-hidden rounded-lg"
        >
          <Image src={img} alt={title} className="w-full h-auto" />
        </Link>

        <div className="w-full flex flex-col items-start justify-between mt-4">
          
          <Link
            href={link}
            target="_blank"
            className="hover:underline underline-offset-2"
          >
            <h2 className="my-2 w-full dark:text-light text-left text-3xl font-bold lg:text-xl">
              {title}
            </h2>
          </Link>
          <p className="my-2 font-medium text-dark dark:text-light sm:text-sm">
            {summary}
          </p>
          <div className="w-full justify-between mt-2 flex items-center">
            <Link href={github} target="_blank" className="w-10 md:w-6">
              {" "}
              <GithubIcon className={"dark:fill-light"} />
            </Link>
            <Link
              href={link}
              target="_blank"
              className="ml-4 rounded-lg bg-dark text-light dark:bg-light dark:text-dark p-2 px-6 text-lg font-semibold md:text-base"
            >
              {" "}
              Visit
            </Link>
          </div>
        </div>
      </article>
    </>
  );
};

const projects = () => {
  return (
    <>
      <Head>
        <title>Parth | Project Page</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Transitions />
      <main className="w-full mb-16 flex flex-col justify-center items-center dark:text-light">
        <Layout className="pt-16">
          <AnimatedText
            text="It is not about ideas, it is about making ideas happen"
            className="mb-16 lg:!text-7xl sm:!mb-8 sm:!text-6xl xs:!text-4xl"
          />
          <div className="grid grid-cols-12 gap-24 xl:gap-16 lg:gap-x-8 md:gap-y-24 sm:gap-x-5 ">
          <div className="col-span-12">
              <FeatureProject
               
                title={"Uber Data Analysis"}
                link="https://lookerstudio.google.com/s/lFOwfPgEm2o"
                github={"https://github.com/Parth-Pidadi/UBER_datapipeline_with-analysis"}
                img={uberimg}
                summary="The Uber ETL Pipeline project is created using various services of Google Cloud Platform. I designed and implemented an efficient data processing system using Python. Leveraging Google Storage for scalable storage, Compute Instances for task orchestration, and BigQuery for a powerful data warehouse, the pipeline ensured rapid analytics. Integration with Looker Studio provided user-friendly data visualizations, enhancing accessibility and usability. This ETL pipeline, part of a cloud-native architecture, optimized Uber's data management and analytics capabilities"
              />
            </div>
            <div className="col-span-12">
              <FeatureProject
                
                title={"ANPR System for Motorcyclist riding without Helmet"}
                link="https://github.com/Parth-Pidadi/ANPR-System"
                github={"https://github.com/Parth-Pidadi/ANPR-System"}
                img={anprimg}
                summary="
                In the development of an Automatic Number Plate Recognition (ANPR) System for motorcyclists riding without helmets, I utilized Python with the YOLOv8 architecture for effective object detection. The graphical user interface (GUI) was implemented using JavaBeans. The system takes input from a video feed, and through the integration of the EasyOCR library, it identifies motorcyclists not wearing helmets. In such cases, the system captures and stores the number plate information in a database. This comprehensive solution enhances safety monitoring by automatically identifying helmet non-compliance and maintaining a record of associated vehicle details."
              />
            </div>
            <div className="col-span-12">
              <FeatureProject
                
                title={"Youtube Data Analysis"}
                link="https://github.com/Parth-Pidadi/YT-DATA-ANALYSIS"
                github={"https://github.com/Parth-Pidadi/YT-DATA-ANALYSIS"}
                img={ytimg}
                summary="This project's objective is to securely manage and analyze structured and semi-structured data from YouTube videos, categorized by video categories and trending metrics. The goals include developing mechanisms for data ingestion, implementing an ETL system for data transformation, establishing a centralized data lake, ensuring scalability as data size increases, and leveraging AWS cloud services for processing. 
                Service utilized :  Amazon S3, AWS IAM, QuickSight, AWS Glue, AWS Lambda, AWS Athena
                "
              />
            </div>
           
            <div className="col-span-12">
              <FeatureProject
                
                title={"Olympics 105 years Data Visualisation"}
                link="https://github.com/Parth-Pidadi/OlympicsDataVisualisation"
                github={"https://github.com/Parth-Pidadi/OlympicsDataVisualisation"}
                img={olympicsimg}
                summary="
                In this project, I conducted comprehensive data analysis for the Olympics, leveraging Power BI and Jupyter Notebook. Using diverse datasets, I explored the evolution of Olympic events over time, delving into factors such as participant diversity, athlete performance, and various sports metrics. Employing Power BI, I created an insightful dashboard offering an analytical overview of individual and country performances. The analysis incorporated factors like gender distribution, medal counts, and event details. This project utilized Power BI for graphical representation and Jupyter Notebook for analytical insights, showcasing my proficiency in data analysis, visualization, and storytelling using tools crucial for contemporary business intelligence."
              />
            </div>
            <div className="col-span-12">
              <FeatureProject
                type={"FEATURE PROJECT"}
                title={"C O N V E R S O"}
                link="https://github.com/soumyasootar/Converso"
                github={"https://github.com/soumyasootar/Converso"}
                img={Portfolioimg}
                summary="Converso is a real-time chat application built using React, Socket.IO, MongoDB, Express, Node.js,Mongoose and Chakra UI. The app enables users to chat with each other instantly, while offering an intuitive and modern UI. Converso is built to be scalable and reliable, and can be easily deployed to any environment. "
              />
            </div>
            <div className="col-span-12">
              <FeatureProject
                type={"FEATURE PROJECT"}
                title={"C O N V E R S O"}
                link="https://github.com/soumyasootar/Converso"
                github={"https://github.com/soumyasootar/Converso"}
                img={bscimg}
                summary="Converso is a real-time chat application built using React, Socket.IO, MongoDB, Express, Node.js,Mongoose and Chakra UI. The app enables users to chat with each other instantly, while offering an intuitive and modern UI. Converso is built to be scalable and reliable, and can be easily deployed to any environment. "
              />
            </div>
            
            
          </div>
        </Layout>
      </main>
    </>
  );
};

export default projects;
